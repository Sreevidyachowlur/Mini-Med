step 1:
register

step 2:
login

step 3:
order details
newOrder,orderCancel,orderTrack,UpdateTracking

bcrypt:
inside auth-service we need to write  jwt.sign
bcrypt.hash inside userDAO,or user-service while create(/register) time and update 
the hashed - password will update inside DB.

const userDAO = {
   
    create: async(payload) => { 

    let password = await bcrypt.hash(payload.password, saltRounds);
      payload.password=password; //here password updated with hash and also stored in DB asWell.

jsonWebToken:
inside middleware -> authentication -> we have to write the jwt.verify

route.post(CONSTANT.ENDPOINT.LEAVE.LEAVE_APPLING,authentication, (req, res) => {

authentication is middleware here.
we have to write middleware in every route as i mentioned above..!


const saltRounds=10; //salt value can be 8 or more than that,if it increases more than 10 
// it take more time to exicute..default salt value is 10.10 rounds it do for encode 

token i will get from /auth/login api.
LEAVE_APPLING or for anything we have to use that token, inside headers in Authorization we have to pass this token
